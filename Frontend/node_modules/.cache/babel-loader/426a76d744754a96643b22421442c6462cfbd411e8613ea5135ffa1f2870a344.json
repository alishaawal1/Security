{"ast":null,"code":"var _jsxFileName = \"D:\\\\bakehub\\\\bakehub\\\\Frontend\\\\src\\\\pages\\\\Passwordreset.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { resetPasswordApi } from '../apis/Api';\nimport '../style/cakes.css'; // Adjust path as per your project structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords do not match\");\n      return;\n    }\n    resetPasswordApi(token, {\n      password\n    }).then(res => {\n      if (res.data.success) {\n        toast.success('Password has been reset successfully');\n        navigate('/login');\n      } else {\n        toast.error(res.data.message);\n      }\n    }).catch(err => {\n      toast.error('Server Error');\n      console.error(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-reset-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"password-reset\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(PasswordReset, \"p5jTxc5TrhQQ2ijdYWNQsAAcd18=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","toast","resetPasswordApi","jsxDEV","_jsxDEV","PasswordReset","_s","token","navigate","password","setPassword","confirmPassword","setConfirmPassword","handleSubmit","e","preventDefault","error","then","res","data","success","message","catch","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/bakehub/bakehub/Frontend/src/pages/Passwordreset.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { resetPasswordApi } from '../apis/Api';\r\nimport '../style/cakes.css'; // Adjust path as per your project structure\r\n\r\nconst PasswordReset = () => {\r\n    const { token } = useParams();\r\n    const navigate = useNavigate();\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== confirmPassword) {\r\n            toast.error(\"Passwords do not match\");\r\n            return;\r\n        }\r\n\r\n        resetPasswordApi(token, { password })\r\n            .then((res) => {\r\n                if (res.data.success) {\r\n                    toast.success('Password has been reset successfully');\r\n                    navigate('/login');\r\n                } else {\r\n                    toast.error(res.data.message);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                toast.error('Server Error');\r\n                console.error(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"password-reset-container\">\r\n            <div className=\"password-reset\">\r\n                <h2>Reset Your Password</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <label htmlFor=\"password\">New Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                    <label htmlFor=\"confirmPassword\">Confirm New Password:</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"confirmPassword\"\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        required\r\n                    />\r\n                    <button type=\"submit\">Reset Password</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordReset;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}