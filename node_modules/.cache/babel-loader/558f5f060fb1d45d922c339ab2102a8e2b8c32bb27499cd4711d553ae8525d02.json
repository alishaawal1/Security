{"ast":null,"code":"var _jsxFileName = \"D:\\\\bakehub\\\\bakehub\\\\Frontend\\\\src\\\\pages\\\\PasswordResetRequest.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { requestPasswordResetApi } from '../apis/Api'; // API function to request password reset\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordResetRequest = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    requestPasswordResetApi({\n      email\n    }).then(res => {\n      if (res.data.success) {\n        toast.success('Password reset link sent to your email');\n      } else {\n        toast.error(res.data.message);\n      }\n    }).catch(err => {\n      toast.error('Server Error');\n      console.error(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"password-reset-request\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Enter your email address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(PasswordResetRequest, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n_c = PasswordResetRequest;\nexport default PasswordResetRequest;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetRequest\");","map":{"version":3,"names":["React","useState","toast","requestPasswordResetApi","jsxDEV","_jsxDEV","PasswordResetRequest","_s","email","setEmail","handleSubmit","e","preventDefault","then","res","data","success","error","message","catch","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/bakehub/bakehub/Frontend/src/pages/PasswordResetRequest.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { requestPasswordResetApi } from '../apis/Api'; // API function to request password reset\r\n\r\nconst PasswordResetRequest = () => {\r\n    const [email, setEmail] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        requestPasswordResetApi({ email })\r\n            .then((res) => {\r\n                if (res.data.success) {\r\n                    toast.success('Password reset link sent to your email');\r\n                } else {\r\n                    toast.error(res.data.message);\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                toast.error('Server Error');\r\n                console.error(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"password-reset-request\">\r\n            <h2>Reset Your Password</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"email\">Enter your email address:</label>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Send Reset Link</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordResetRequest;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,uBAAuB,QAAQ,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBT,uBAAuB,CAAC;MAAEK;IAAM,CAAC,CAAC,CAC7BK,IAAI,CAAEC,GAAG,IAAK;MACX,IAAIA,GAAG,CAACC,IAAI,CAACC,OAAO,EAAE;QAClBd,KAAK,CAACc,OAAO,CAAC,wCAAwC,CAAC;MAC3D,CAAC,MAAM;QACHd,KAAK,CAACe,KAAK,CAACH,GAAG,CAACC,IAAI,CAACG,OAAO,CAAC;MACjC;IACJ,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACZlB,KAAK,CAACe,KAAK,CAAC,cAAc,CAAC;MAC3BI,OAAO,CAACJ,KAAK,CAACG,GAAG,CAAC;IACtB,CAAC,CAAC;EACV,CAAC;EAED,oBACIf,OAAA;IAAKiB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACnClB,OAAA;MAAAkB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BtB,OAAA;MAAMuB,QAAQ,EAAElB,YAAa;MAAAa,QAAA,gBACzBlB,OAAA;QAAOwB,OAAO,EAAC,OAAO;QAAAN,QAAA,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxDtB,OAAA;QACIyB,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,OAAO;QACVC,KAAK,EAAExB,KAAM;QACbyB,QAAQ,EAAGtB,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;QAC1CG,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACFtB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACpB,EAAA,CAnCID,oBAAoB;AAAA8B,EAAA,GAApB9B,oBAAoB;AAqC1B,eAAeA,oBAAoB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}