{"ast":null,"code":"var _jsxFileName = \"D:\\\\bakehub\\\\bakehub\\\\Frontend\\\\src\\\\pages\\\\ContactUs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../style/Contact.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactUs = () => {\n  _s();\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    // Add your logic here to handle the form submission, e.g., sending data to the server\n\n    // Reset the form fields after submission\n    setFullName('');\n    setEmail('');\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-us\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-contact\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-us-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contact Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fullName\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"fullName\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"message\",\n          children: \"Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"message\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(ContactUs, \"2O4AcW9LUhWNw3yyuO9Kr/PzlIw=\");\n_c = ContactUs;\nexport default ContactUs;\nvar _c;\n$RefreshReg$(_c, \"ContactUs\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ContactUs","_s","fullName","setFullName","email","setEmail","message","setMessage","handleFormSubmit","e","preventDefault","className","children","src","contact","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/bakehub/bakehub/Frontend/src/pages/ContactUs.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../style/Contact.css';\r\n\r\nconst ContactUs = () => {\r\n    const [fullName, setFullName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n  \r\n    const handleFormSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n      // Add your logic here to handle the form submission, e.g., sending data to the server\r\n  \r\n      // Reset the form fields after submission\r\n      setFullName('');\r\n      setEmail('');\r\n      setMessage('');\r\n    };\r\n  \r\n    return (\r\n      <div className=\"contact-us\">\r\n        <div className='image-contact'>\r\n          <img src={contact}/>\r\n        </div>\r\n      <div className=\"contact-us-container\">\r\n        <h1>Contact Us</h1>\r\n        <form onSubmit={handleFormSubmit}>\r\n          <label htmlFor=\"fullName\">Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"fullName\"\r\n            value={fullName}\r\n            onChange={(e) => setFullName(e.target.value)}\r\n            required\r\n          />\r\n  \r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n  \r\n          <label htmlFor=\"message\">Message</label>\r\n          <textarea\r\n            id=\"message\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            required\r\n          ></textarea>\r\n  \r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ContactUs;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}